services:
  # MongoDB Database
  mongodb:
    image: mongo:5-focal
    container_name: trade-ai-mongodb-simple
    restart: unless-stopped
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=tradeai_production
    networks:
      - trade-ai-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trade-ai-backend-simple
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - USE_MOCK_DB=false
      - MONGODB_URI=mongodb://mongodb:27017/tradeai_production
      - JWT_SECRET=your_super_secure_jwt_secret_key_change_this_in_production_2025
      - JWT_REFRESH_SECRET=your_super_secure_refresh_secret_key_change_this_in_production_2025
      - JWT_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=info
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - trade-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5001/api
        - REACT_APP_DEMO_MODE=false
    container_name: trade-ai-frontend-simple
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5001/api
      - REACT_APP_DEMO_MODE=false
    depends_on:
      - backend
    networks:
      - trade-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health.json"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local

networks:
  trade-ai-network:
    driver: bridge